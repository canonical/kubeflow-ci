[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
releases_test_path = {toxinidir}/tests/
scripts_path = {toxinidir}/scripts/
scripts_test_path = {toxinidir}/scripts/tests
all_path = {[vars]releases_test_path} {[vars]scripts_path} {[vars]scripts_test_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]scripts_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell {toxinidir}/. --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/cannon_runs --skip **/venv
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]scripts_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:branch_creation]
description = Run branch creation script
passenv =
  KUBEFLOW_BOT_TOKEN
deps = 
  pyyaml
  requests
  GitPython
commands = python3 ./scripts/branch_creation.py {posargs}

[testenv:test_branch_creation]
description = Test branch creation
deps =
    pyyaml
    requests
    GitPython
    pytest
    requests-mock
    pytest-mock
commands =
    pytest -v --tb native {[vars]scripts_test_path}/test_branch_creation.py --log-cli-level=INFO -s {posargs}

[testenv:test_batch_release_charms]
description = Test tools for batch-releasing multiple charms
deps =
    pytest
    pytest-mock
    -r{toxinidir}/scripts/release-charms/requirements.txt
commands =
    pytest -v --tb native {[vars]scripts_path}/release-charms/. --log-cli-level=INFO -s {posargs}

[testenv:test_1dot4]
description = Test bundles
deps = 
  -r {toxinidir}/tests/1dot4/requirements.txt
commands = pytest -vs --tb native {[vars]releases_test_path}1dot4 --model kubeflow {posargs}


[testenv:test_1dot6]
description = Test bundles
deps = 
  -r {toxinidir}/tests/1dot6/requirements.txt
commands = pytest -vs --tb native {[vars]releases_test_path}1dot6 --model kubeflow {posargs}
